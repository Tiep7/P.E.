# -*- coding: utf-8 -*-
"""aula-pratica-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19Kv8dUP3r-WhNfjXy7quCFgSHLF68Q-M
"""

# Commented out IPython magic to ensure Python compatibility.
# #Criar um programa em C que exiba a mensagem "hello world".
# %%writefile epp1.c
# #include<stdio.h>
# int main(void) {
#   printf("hello word");
#   return 0;
# }

!gcc epp1.c -o epp1
!./epp1

# Commented out IPython magic to ensure Python compatibility.
# #Criar um programa em C que exiba a mensagem "Digite qualquer caractere para sair...". O programa deve ser encerrado após alguma tecla ser lida por meio do teclado.
# %%writefile epp2.c
# #include<stdio.h>
# int main(void) {
#   char C;
#   printf("Digite qualquer caractere para sair...");
#   scanf("%c", &C);
#   return 0;
# }

!gcc epp2.c -o epp2
!./epp2

# Commented out IPython magic to ensure Python compatibility.
# #Criar um programa em C que peça que um valor inteiro seja digitado. Em seguida, o programa deve exibir o valor digitado em uma mensagem.
# %%writefile epp3.c
# #include<stdio.h>
# int main(void) {
#   int a;
#   printf("Digite um valor inteiro: ");
#   scanf("%d", &a);
#   printf("O valor digitado foi: %d", a);
#   return 0;
# }

!gcc epp3.c -o epp3
!./epp3

# Commented out IPython magic to ensure Python compatibility.
# #Criar um programa em C que peça que sejam digitados dois valores inteiros.
# #Em seguida, o programa deve exibir mensagens informando o resultado das operações de soma, multiplicação, subtração, divisão e resto.
# %%writefile epp4.c
# #include<stdio.h>
# int main(void) {
#     int a, b, s, p, q, r, d;
#     printf("Digite dois valores: ");
#     scanf("%d", &a);
#     scanf("%d", &b);
#     s = a + b;
#     p = a * b;
#     d = a - b;
#     q = a / b;
#     r = a % b;
#     printf("A soma é %d\n", s);
#     printf("O produto é %d\n", p);
#     printf("A diferença é %d\n", d);
#     printf("O quociente é %d\n", q);
#     printf("O resto é %d\n", r);
#     return 0;
# }

!gcc epp4.c -o epp4
!./epp4

# Commented out IPython magic to ensure Python compatibility.
# #Criar um programa que receba um valor real "x" e então calcule e exiba o valor "y" tal que y = x² -2x + 3. O valor de y deve possuir 2 casas decimais.
# %%writefile epp5.c
# #include<stdio.h>
# int main(void) {
#   float x, y;
#   printf("Digite o valor de x: ");
#   scanf("%f", &x);
#   y = (x * x) - (2 * x) + 3;
#   printf("O valor de y é: %.2f", y);
#   return 0;
# }

!gcc epp5.c -o epp5
!./epp5

# Commented out IPython magic to ensure Python compatibility.
# # Exercite a formatação de saídas. Seu programa irá receber 3 valores,
# # então deverá imprimir o primeiro formatado com nenhuma casa decimal, o segundo com duas casas e o terceiro com três casas, seguindo o mesmo estilo da saída de exemplo.
# %%writefile epp1+.c
# #include<stdio.h>
# int main(void) {
#   int a;
#   float b, c;
#   printf("Digite o primeiro número: ");
#   scanf("%d", &a);
#   printf("Digite o segundo número: ");
#   scanf("%f", &b);
#   printf("Digite o terceiro número: ");
#   scanf("%f", &c);
#   printf("Primeiro numero = %d \n", a);
#   printf("%.2f eh o segundo numero \n", b);
#   printf("Finalmente %.3f eh o terceiro numero \n", c);
#   return 0;
# 
# }

!gcc epp1+.c -o epp1+
!./epp1+

# Commented out IPython magic to ensure Python compatibility.
# # Escreva um programa que receba as coordenadas de dois pontos A e B e calcule a distância entre eles.
# %%writefile epp2+.c
# #include<stdio.h>
# #include<math.h>
# int main(void) {
#   float ax, ay, bx, by;
#   printf("Digite ax: ");
#   scanf("%f", &ax);
#   printf("Digite ay: ");
#   scanf("%f", &ay);
#   printf("Digite bx: ");
#   scanf("%f", &bx);
#   printf("Digite by: ");
#   scanf("%f", &by);
#   float distancia = sqrt(pow((bx - ax), 2) + pow((by - ay), 2));
#   printf("%.2f", distancia);
#   return 0;
# }

!gcc epp2+.c -lm -o epp2+
!./epp2+

# Commented out IPython magic to ensure Python compatibility.
# # Faça um programa que calcula a soma dos termos de uma Progressão Aritmética (PA) finita.
# %%writefile epp3+.c
# #include<stdio.h>
# int main(void) {
#   int a1, r, n;
#   printf("Digite a1(primeiro termo da pa): ");
#   scanf("%d", &a1);
#   printf("Digite r(razão): ");
#   scanf("%d", &r);
#   printf("Digite n(número de termos): ");
#   scanf("%d", &n);
#   int an = a1 + ((n - 1)*r);
#   int soma = (n*(a1 + an)) / 2;
#   printf("%d", soma);
#   return 0;
# }

!gcc epp3+.c -o epp3+
!./epp3+

# Commented out IPython magic to ensure Python compatibility.
# # Escreva um programa que receba o valor de um produto e imprima o valor após o desconto 10% + 10%.
# %%writefile epp4+.c
# #include<stdio.h>
# int main(void) {
#   float valor_total;
#   printf("Digite o valor total da compra: ");
#   scanf("%f", &valor_total);
#   float valor_desconto = valor_total - (valor_total * 0.1);
#   float valor_final = valor_desconto - (valor_desconto * 0.1);
#   printf("%.2f", valor_final);
#   return 0;
# }

!gcc epp4+.c -o epp4+
!./epp4+

# Commented out IPython magic to ensure Python compatibility.
# # Um determinado método para encriptar números de 4 dígitos consiste em adicionar 1 em cada dígito do número. Por exemplo:
# %%writefile epp5+.c
# #include<stdio.h>
# int main(void) {
#     int a;
#     printf("Digite a: ");
#     scanf("%d", &a);
#     int m = ((a / 1000)+ 1) % 10;
#     int c = ((a / 100) + 1) % 10;
#     int d = ((a / 10)+ 1) % 10;
#     int u = ((a % 10) + 1) % 10;
# 
#     printf("%d", m);
#     printf("%d", c);
#     printf("%d", d);
#     printf("%d", u);
#     return 0;
# }

!gcc epp5+.c -o epp5+
!./epp5+

# Commented out IPython magic to ensure Python compatibility.
# # exercício 1
# # Implemente um algoritmo que calcule a área de um triângulo (área = (base x altura) / 2),
# # sendo que a base e a altura devem ser definidas pelo usuário (teclado).
# 
# %%writefile ex1.c
# #include<stdio.h>
# int main(void) {
#   int area, base, altura;
#   printf("Digite a base: ");
#   scanf("%d", &base);
#   printf("Digite a altura: ");
#   scanf("%d", &altura);
#   area = (base * altura) / 2;
#   printf("A área do triângulo é: %d", area);
#   return 0;
# }

!gcc ex1.c -o ex1
!./ex1

# Commented out IPython magic to ensure Python compatibility.
# # exercício 2
# # Implemente um algoritmo que leia três números (a, b e c) e então calcule:
# # a) O quadrado de a;
# # b) O cubo de a;
# # c) Resto da divisão de b por c.
# 
# %%writefile ex2.c
# #include<stdio.h>
# int main(void) {
#   int a, b, c;
#   printf("Digite 3 número: ");
#   scanf("%d %d %d", &a, &b, &c);
#   printf("O quadrado de a é: %d\n", (a*a));
#   printf("O cubo de a é: %d\n", (a*a*a));
#   printf("O resto da divisão de b por c: %d", (b % c));
#   return 0;
# 
# }

!gcc ex2.c -o ex2
!./ex2

# Commented out IPython magic to ensure Python compatibility.
# # exercício 3
# # Um professor calcula a nota do curso (N) da seguinte forma: N = 0,40 x P1 + 0,45 x P2 +
# # 0,15 x MEPP. Neste cálculo, P1 é a nota da Prova 1, P2 é a nota da Prova 2 e MEPP é a média
# # das notas das atividades práticas. Escreva um programa que leia as notas P1, P2, MEPP, e
# # ML. Após isso, imprima o valor de N.
# 
# %%writefile ex3.c
# #include<stdio.h>
# int main(void) {
#   float p1, p2, mepp, media;
#   printf("Digite a nota da p1: ");
#   scanf("%f", &p1);
#    printf("Digite a nota da p2: ");
#   scanf("%f", &p2);
#    printf("Digite a média das notas das MEPP: ");
#   scanf("%f", &mepp);
#   media = (p1 * 0.4) + (p2 * 0.45) + (mepp * 0.15);
#   printf("A média do aluno é: %.2f", media);
#   return 0;
# }

!gcc ex3.c -o ex3
!./ex3